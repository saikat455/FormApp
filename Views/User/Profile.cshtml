@{
    ViewData["Title"] = "Profile";
}

<div class="container mt-4">
    <h2>My Profile</h2>

    <!-- Tab navigation for Templates and Forms -->
    <ul class="nav nav-tabs" id="profileTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="templates-tab" data-bs-toggle="tab" data-bs-target="#templates" type="button" role="tab">
                My Templates
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="forms-tab" data-bs-toggle="tab" data-bs-target="#forms" type="button" role="tab">
                My Forms
            </button>
        </li>
    </ul>

    <div class="tab-content" id="profileTabsContent">
        <div class="tab-pane fade show active" id="templates" role="tabpanel">
            <div class="d-flex justify-content-end my-3">
                <button class="btn btn-primary" onclick="showCreateTemplateModal()">Create New Template</button>
            </div>

            <!-- Template Table -->
            <div id="templateTable"></div>
        </div>

        <div class="tab-pane fade" id="forms" role="tabpanel">
            <div id="formTable"></div>
        </div>
    </div>
</div>

<!-- Create/Edit Template Modal -->
<div class="modal fade" id="templateModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="templateModalTitle">Create Template</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="templateForm">
                    <input type="hidden" id="templateId">
                    <div class="mb-3">
                        <label class="form-label">Title</label>
                        <input type="text" class="form-control" id="title" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" id="description" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Topic</label>
                        <select class="form-control" id="topic" required>
                            <option value="Education">Education</option>
                            <option value="Quiz">Quiz</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Image URL</label>
                        <input type="url" class="form-control" id="imageUrl">
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="isPublic">
                            <label class="form-check-label">Public Template</label>
                        </div>
                    </div>

                    <!-- Questions Section -->
                    <div id="questionsContainer">
                        <h5>Questions</h5>
                        <div id="questionsList"></div>
                        <button type="button" class="btn btn-secondary mt-2" onclick="addQuestion()">Add Question</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveTemplate()">Save Template</button>
            </div>
        </div>
    </div>
</div>

<!-- View Template Questions Modal -->
<div class="modal fade" id="viewQuestionsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewQuestionsModalTitle">Template Questions</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="viewQuestionsContainer">
                <!-- Questions will be dynamically loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let templateTable;
        let formTable;

        $(document).ready(function() {
            initializeTables();
        });

        function initializeTables() {
            templateTable = new Tabulator("#templateTable", {
                ajaxURL: "/User/GetTemplates",
                layout: "fitColumns",
                columns: [
                    { title: "Title", field: "title", sorter: "string" },
                    { title: "Topic", field: "topic", sorter: "string" },
                    { title: "Public", field: "isPublic", formatter: "tickCross" },
                    {
                        title: "Actions",
                        formatter: function(cell) {
                            const data = cell.getRow().getData();
                            return `
                                <button class="btn btn-info btn-sm" onclick="viewTemplateQuestions(${data.id})">View Questions</button>
                                <button class="btn btn-info btn-sm" onclick="editTemplate(${data.id})">Edit</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteTemplate(${data.id})">Delete</button>
                            `;
                        }
                    }
                ]
            });

            formTable = new Tabulator("#formTable", {
                ajaxURL: "/User/GetForms",
                layout: "fitColumns",
                columns: [
                    { title: "Template", field: "template.title", sorter: "string" },
                    { title: "Created", field: "createdAt", sorter: "date" },
                    {
                        title: "Actions",
                        formatter: function(cell) {
                            const data = cell.getRow().getData();
                            return `
                                <button class="btn btn-info btn-sm" onclick="viewForm(${data.id})">View</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteForm(${data.id})">Delete</button>
                            `;
                        }
                    }
                ]
            });
        }

        function showCreateTemplateModal() {
            $('#templateId').val('');
            $('#templateForm')[0].reset();
            $('#questionsList').empty();
            $('#templateModalTitle').text('Create Template');
            $('#templateModal').modal('show');
        }

        function addQuestion() {
            const questionHtml = `
                <div class="question-item border p-3 mb-2">
                    <div class="mb-2">
                        <label class="form-label">Question Title</label>
                        <input type="text" class="form-control question-title" required>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Description</label>
                        <input type="text" class="form-control question-description">
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Type</label>
                        <select class="form-control question-type" required>
                            <option value="SingleLine">Single Line Text</option>
                            <option value="MultiLine">Multi Line Text</option>
                            <option value="Integer">Integer</option>
                            <option value="Checkbox">Checkbox</option>
                        </select>
                    </div>
                    <div class="form-check mb-2">
                        <input type="checkbox" class="form-check-input question-show-table">
                        <label class="form-check-label">Show in Table</label>
                    </div>
                    <button type="button" class="btn btn-danger btn-sm" onclick="this.parentElement.remove()">Remove Question</button>
                </div>
            `;
            $('#questionsList').append(questionHtml);
        }

        function saveTemplate() {
            const questions = [];
            $('.question-item').each(function() {
                questions.push({
                    title: $(this).find('.question-title').val(),
                    description: $(this).find('.question-description').val(),
                    type: $(this).find('.question-type').val(),
                    showInTable: $(this).find('.question-show-table').is(':checked')
                });
            });

            const templateData = {
                id: $('#templateId').val() || 0,
                title: $('#title').val(),
                description: $('#description').val(),
                topic: $('#topic').val(),
                imageUrl: $('#imageUrl').val(),
                isPublic: $('#isPublic').is(':checked'),
                questions: questions
            };

            $.ajax({
                url: '/User/SaveTemplate',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(templateData),
                success: function(response) {
                    if (response.success) {
                        $('#templateModal').modal('hide');
                        templateTable.setData();
                        toastr.success(response.message);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function() {
                    toastr.error('An error occurred while saving the template');
                }
            });
        }

        function editTemplate(id) {
            $.get(`/User/GetTemplate/${id}`, function(template) {
                $('#templateId').val(template.id);
                $('#title').val(template.title);
                $('#description').val(template.description);
                $('#topic').val(template.topic);
                $('#imageUrl').val(template.imageUrl);
                $('#isPublic').prop('checked', template.isPublic);

                $('#questionsList').empty();
                template.questions.forEach(function(question) {
                    const questionHtml = `
                        <div class="question-item border p-3 mb-2">
                            <div class="mb-2">
                                <label class="form-label">Question Title</label>
                                <input type="text" class="form-control question-title" value="${question.title}" required>
                            </div>
                            <div class="mb-2">
                                <label class="form-label">Description</label>
                                <input type="text" class="form-control question-description" value="${question.description}">
                            </div>
                            <div class="mb-2">
                                <label class="form-label">Type</label>
                                <select class="form-control question-type" required>
                                    <option value="SingleLine" ${question.type === 'SingleLine' ? 'selected' : ''}>Single Line Text</option>
                                    <option value="MultiLine" ${question.type === 'MultiLine' ? 'selected' : ''}>Multi Line Text</option>
                                    <option value="Integer" ${question.type === 'Integer' ? 'selected' : ''}>Integer</option>
                                    <option value="Checkbox" ${question.type === 'Checkbox' ? 'selected' : ''}>Checkbox</option>
                                </select>
                            </div>
                            <div class="form-check mb-2">
                                <input type="checkbox" class="form-check-input question-show-table" ${question.showInTable ? 'checked' : ''}>
                                <label class="form-check-label">Show in Table</label>
                            </div>
                            <button type="button" class="btn btn-danger btn-sm" onclick="this.parentElement.remove()">Remove Question</button>
                        </div>
                    `;
                    $('#questionsList').append(questionHtml);
                });

                $('#templateModalTitle').text('Edit Template');
                $('#templateModal').modal('show');
            });
        }

        function viewTemplateQuestions(id) {
            $.get(`/User/GetTemplateQuestions/${id}`, function(template) {
                if (template.success === false) {
                    toastr.error(template.message);
                    return;
                }

                $('#viewQuestionsModalTitle').text(template.title);

                // Filter questions where ShowInTable is true
                const filteredQuestions = template.questions.filter(question => question.showInTable);

                const questionListHtml = filteredQuestions.map(question => {
                    return `
                        <div class="border p-3 mb-2">
                            <h5>${question.title}</h5>
                            <p>${question.description}</p>
                            <p>Type: ${question.type}</p>
                        </div>
                    `;
                }).join('');

                $('#viewQuestionsContainer').html(questionListHtml);
                $('#viewQuestionsModal').modal('show');
            }).fail(function() {
                toastr.error('An error occurred while loading the questions.');
            });
        }



                function deleteTemplate(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You won\'t be able to revert this!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, keep it'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/User/DeleteTemplate/${id}`,
                        type: 'POST',  // Make sure the HTTP method matches the controller's action
                        success: function(response) {
                            templateTable.setData();
                            Swal.fire('Deleted!', response.message, 'success');
                        },
                        error: function() {
                            Swal.fire('Error!', 'An error occurred while deleting the template', 'error');
                        }
                    });
                }
            });
        }


        function viewForm(id) {
            window.location.href = `/User/ViewForm/${id}`;
        }

        function deleteForm(id) {
            if (confirm('Are you sure you want to delete this form?')) {
                $.ajax({
                    url: `/User/DeleteForm/${id}`,
                    type: 'DELETE',
                    success: function(response) {
                        formTable.setData();
                        toastr.success(response.message);
                    },
                    error: function() {
                        toastr.error('An error occurred while deleting the form');
                    }
                });
            }
        }
    </script>
}
